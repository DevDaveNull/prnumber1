name: Build check

on:
  push:
    branches: [ "**" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  compile-and-wait:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Если форк частный — честно сообщаем и останавливаемся
      - name: Ensure repository is PUBLIC
        if: ${{ github.event.repository.private }}
        run: |
          echo "❌ Этот форк приватный. Для автоматической проверки сделайте репозиторий PUBLIC (или дайте преподавателю доступ)."
          exit 1

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Compile sources
        run: |
          FILES=$(find src/main/java -name "*.java")
          if [ -z "$FILES" ]; then
            echo "❌ В каталоге src/main/java не найдены .java файлы."
            exit 1
          fi
          javac $FILES
          echo "✅ Код скомпилирован. Ожидаем результаты приватной проверки…"

      - name: Wait for private grading comment
        env:
          GH_TOKEN: ${{ github.token }}   # встроенный токен студенческого репо
          REPO: ${{ github.repository }}
          SHA:  ${{ github.sha }}
          GRADER_PREFIX: "Grading result:"  # префикс, по которому узнаём ответ грейдера
          MAX_TRIES: "60"   # 60 попыток × 30 сек ≈ 30 минут ожидания
          SLEEP_SEC: "30"
        shell: bash
        run: |
          echo "Ожидаем комментарий от приватного грейдера для $REPO@$SHA …"
          i=0
          FOUND=""
          BODY=""
          while [ $i -lt $MAX_TRIES ]; do
            # читаем ВСЕ комментарии к коммиту, выбираем строки с нужным префиксом
            RESP=$(gh api -X GET "repos/$REPO/commits/$SHA/comments" -q '.[].body' || true)
            MATCH=$(printf "%s\n" "$RESP" | awk -v pfx="$GRADER_PREFIX" 'index($0,pfx)==1 {print; exit}')
            if [ -n "$MATCH" ]; then
              FOUND="yes"
              BODY="$MATCH"
              break
            fi
            i=$((i+1))
            echo "… пока нет (попытка $i/$MAX_TRIES). Спим $SLEEP_SEC сек."
            sleep "$SLEEP_SEC"
          done

          if [ -z "$FOUND" ]; then
            echo "::warning::Не дождались приватной проверки. Загляните позже в комментарии к коммиту или в общий отчёт преподавателя."
            exit 0
          fi

          echo "Сообщение грейдера:"
          echo "$BODY"

          # ожидаем один из вариантов: "Grading result: OK" или "Grading result: FAILED"
          if echo "$BODY" | grep -qiE '^Grading result:\s*OK\b'; then
            echo "✅ Приватные тесты пройдены."
            exit 0
          else
            echo "❌ Приватные тесты НЕ пройдены."
            exit 1
          fi
